{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Pharmacy",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is pharmacy app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://pharmacy-node.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Auth operations"
    },
    {
      "name": "Shop",
      "description": "Operation with Shop"
    },
    {
      "name": "Product",
      "description": "Operation with Product"
    },
     {
      "name": "Statistics",
      "description": "Operation with Statistics"
    }
  ],
  "paths": {
    "/shop": {
      "get": {
        "tags": ["Shop"],
        "summary": "Get all shop",
        "operationId": "getShopsController",
        "description": "Get list of shops with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "sortOrder"
            },
            "description": "All contact's fields. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found Shop!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Shop!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/shop"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/create": {
      "post": {
        "tags": ["Shop"],
        "summary": "Create shop",
        "operationId": "createShopController",
        "description": "Create a shop with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "owner",
                  "phone",
                  "email",
                  "street",
                  "sity",
                  "zip"
                ],
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "owner": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "phone": {
                    "definitions": "shop's phone number",
                    "type": "string",
                    "example": 380000000002
                  },
                  "email": {
                    "definitions": "shop's phone number",
                    "type": "string",
                    "example": "qwee3@example.com"
                  },
                  "street": {
                    "definitions": "shop's street address",
                    "type": "string",
                    "example": "Main, 3"
                  },
                  "sity": {
                    "definitions": "shop's sity address",
                    "type": "string",
                    "example": "Kyiv"
                  },
                  "zip": {
                    "definitions": "shop's street address",
                    "type": "string",
                    "example": "12345"
                  },
                  "addInfo": {
                    "definitions": "shop's some info",
                    "type": "string",
                    "example": "respet shop near busstation "
                  },
                  "delivery": {
                    "definitions": "shop's delivery",
                    "type": "string",
                    "example": "no",
                    "enum": ["yes", "no"],
                    "default": "no"
                  },
                  "rating": {
                    "definitions": "shop's rating",
                    "type": "number",
                    "example": "5 "
                  },
                  "photo": {
                    "description": "shop's photo to download",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/shop"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}": {
      "get": {
        "tags": ["Shop"],
        "summary": "Get shop by id",
        "operationId": "getShopIDController",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 6692528c222b4be7b4b17ebd!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/shop"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": ["Shop"],
        "summary": "Delete shop",
        "operationId": "deleteShop",
        "description": "Delete a shop from DB",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete shop by id"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/update": {
      "put": {
        "tags": ["Shop"],
        "summary": "Change shop by ID",
        "operationId": "changeShopController",
        "description": "Change a contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "owner": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "phone": {
                    "definitions": "shop's phone number",
                    "type": "string",
                    "example": 380000000002
                  },
                  "email": {
                    "definitions": "shop's phone number",
                    "type": "string",
                    "example": "qwee3@example.com"
                  },
                  "street": {
                    "definitions": "shop's street address",
                    "type": "string",
                    "example": "Main, 3"
                  },
                  "sity": {
                    "definitions": "shop's sity address",
                    "type": "string",
                    "example": "Kyiv"
                  },
                  "zip": {
                    "definitions": "shop's street address",
                    "type": "string",
                    "example": "12345"
                  },
                  "addInfo": {
                    "definitions": "shop's some info",
                    "type": "string",
                    "example": "respet shop near busstation "
                  },
                  "delivery": {
                    "definitions": "shop's delivery",
                    "type": "string",
                    "example": "no",
                    "enum": ["yes", "no"],
                    "default": "no"
                  },
                  "rating": {
                    "definitions": "shop's rating",
                    "type": "number",
                    "example": "5 "
                  },
                  "photo": {
                    "description": "shop's photo to download",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully changed a shop!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/shop"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": ["User"],
        "summary": "Logout user",
        "operationId": "logout",
        "description": "Logout a user and close session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "description": "active user'stoken",
                    "type": "string",
                    "example": "6Ug2i00+Id20XaepdQV5DYHifOudD56R+QBcYq0K"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout a user and close session"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/user-info'": {
      "get": {
        "tags": ["User"],
        "summary": "Logout user",
        "operationId": "getInfoUserController",
        "description": "Get ingo about user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Show user's info"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "operationId": "login",
        "description": "Login a user ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "definitions": "user's email",
                    "type": "string",
                    "example": "dasd@fsdf.com"
                  },
                  "password": {
                    "definitions": "user's password",
                    "type": "string",
                    "example": "bbfdbhfds"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "tags": ["User"],
        "summary": "Refresh session",
        "operationId": "refreshSessionController",
        "description": "Refresh session token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "definitions": "Refresh session token",
                    "type": "string",
                    "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/session"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a new user",
        "operationId": "register",
        "description": "register user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "phone", "password"],
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "dddhh aayyz"
                  },
                  "phone": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "+121111"
                  },
                  "email": {
                    "definitions": "User's email",
                    "type": "string",
                    "example": "qwee3@example.com"
                  },
                  "password": {
                    "definitions": "User's password",
                    "type": "string",
                    "example": "frwer435"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registered a User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a User!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    },
                    "data": {
                      "type": "object",
                      "required": ["message"],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Email already in use"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shop/{shopId}/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Get all products",
        "operationId": "getProductsController",
        "description": "Get list of shop's products with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "sortOrder"
            },
            "description": "All product's fields. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found products!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["name", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Products!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/products.yaml"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/product/add": {
      "post": {
        "tags": ["Product"],
        "summary": "Create product",
        "operationId": "createProductController",
        "description": "Create a product with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "price",
                  "category",
                  "medicine",
                  "supplier",
                  "brend"
                ],
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "analdin"
                  },
                  "price": {
                    "definitions": "full name",
                    "type": "number",
                    "example": 100
                  },
                  "category": {
                    "definitions": "product's category",
                    "type": "string",
                    "example": "analgetic"
                  },
                  "medicine": {
                    "definitions": "product's guide",
                    "type": "string",
                    "example": "some about poduct"
                  },
                  "supplier": {
                    "definitions": "product's supplier",
                    "type": "string",
                    "example": "farm dostavka"
                  },
                  "brend": {
                    "definitions": "product's brend",
                    "type": "string",
                    "example": "Kyiv vitamin"
                  },
                  "rating": {
                    "definitions": "product's rating",
                    "type": "number",
                    "example": 5
                  },
                  "photo": {
                    "description": "Product's photo to download",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/product/{productId}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by id",
        "operationId": "getProductIDController",
        "description": "Get product by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get product by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found product with id 6692528c222b4be7b4b17ebd!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/product/{productId}/edit": {
      "put": {
        "tags": ["Product"],
        "summary": "Change Product by ID",
        "operationId": "changeProductController",
        "description": "Change a Product by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "definitions": "full name",
                    "type": "string",
                    "example": "analdin"
                  },
                  "price": {
                    "definitions": "full name",
                    "type": "number",
                    "example": 100
                  },
                  "category": {
                    "definitions": "product's category",
                    "type": "string",
                    "example": "analgetic"
                  },
                  "medicine": {
                    "definitions": "product's guide",
                    "type": "string",
                    "example": "some about poduct"
                  },
                  "supplier": {
                    "definitions": "product's supplier",
                    "type": "string",
                    "example": "farm dostavka"
                  },
                  "brend": {
                    "definitions": "product's brend",
                    "type": "string",
                    "example": "Kyiv vitamin"
                  },
                  "rating": {
                    "definitions": "product's rating",
                    "type": "number",
                    "example": 5
                  },
                  "photo": {
                    "description": "Product's photo to download",
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change a Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully changed a Product!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/product/{productId}/delete": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete product",
        "operationId": "deleteProductController",
        "description": "Delete a shop from DB",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete shop by id"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistic shop",
        "operationId": "getStatisticsController",
        "description": "Get statistic shop",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6692528c222b4be7b4b17ebd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get statistic shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found statistic shop!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/statistics"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/shop/{shopId}/statistics/{clientId}/goods": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistic client's order",
        "operationId": "getStatisticsIdController",
        "description": "Get statistic id shop",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67aa5d900409923fda18e459"
            }
          },
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a9a018c3563e35a1c11ef3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get statistic client",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found statistic client!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/statisticsClient"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "shop": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "owner",
          "phone",
          "email",
          "street",
          "sity",
          "zip",
          "userId"
        ],
        "properties": {
          "_id": {
            "definitions": "Shop's ID",
            "type": "string",
            "example": "67aa5d900409923fda18e459"
          },
          "owner": {
            "definitions": "full name",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "phone": {
            "definitions": "shop's phone number",
            "type": "string",
            "example": 380000000002
          },
          "email": {
            "definitions": "shop's phone number",
            "type": "string",
            "example": "qwee3@example.com"
          },
          "street": {
            "definitions": "shop's street address",
            "type": "string",
            "example": "Main, 3"
          },
          "sity": {
            "definitions": "shop's sity address",
            "type": "string",
            "example": "Kyiv"
          },
          "zip": {
            "definitions": "shop's street address",
            "type": "string",
            "example": "12345"
          },
          "addInfo": {
            "definitions": "shop's some info",
            "type": "string",
            "example": "respet shop near busstation "
          },
          "delivery": {
            "definitions": "shop's delivery",
            "type": "string",
            "example": "no",
            "enum": ["yes", "no"],
            "default": "no"
          },
          "rating": {
            "definitions": "shop's rating",
            "type": "number",
            "example": "5 "
          },
          "photo": {
            "description": "shop's photo to download",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
          },
          "userId": {
            "definitions": "Autorth's shop ID",
            "type": "string",
            "example": "67a676e8396df9b485290ab8"
          }
        }
      },
      "product": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "price",
          "category",
          "medicine",
          "supplier",
          "brend",
          "shopId",
          "userId"
        ],
        "properties": {
          "_id": {
            "definitions": "Product's ID",
            "type": "string",
            "example": "67aa0bcb6113412ef92d109f"
          },
          "name": {
            "definitions": "full name",
            "type": "string",
            "example": "analdin"
          },
          "price": {
            "definitions": "full name",
            "type": "number",
            "example": 100
          },
          "category": {
            "definitions": "product's category",
            "type": "string",
            "example": "analgetic"
          },
          "medicine": {
            "definitions": "product's guide",
            "type": "string",
            "example": "some about poduct"
          },
          "supplier": {
            "definitions": "product's supplier",
            "type": "string",
            "example": "farm dostavka"
          },
          "brend": {
            "definitions": "product's brend",
            "type": "string",
            "example": "Kyiv vitamin"
          },
          "rating": {
            "definitions": "product's rating",
            "type": "number",
            "example": 5
          },
          "photo": {
            "description": "Product's photo to download",
            "type": "string",
            "format": "binary",
            "example": "https://res.cloudinary.com/dzcis7rfr/image/upload/v1723708555/yikknimmâ€¦"
          },
          "shopId": {
            "definitions": "Autorth's shop ID",
            "type": "string",
            "example": "67a676e8396df9b485290ab8"
          },
           "userId": {
            "definitions": "Autorth's shop ID",
            "type": "string",
            "example": "67a676e8396df9b485290ab8"
          }
        }
      },
      "session": {
        "type": "object",
        "required": [
          "userId",
          "accessToken",
          "refreshToken",
          "accessTokenValidUntil",
          "refreshTokenValidUntil"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "example": "67a676e8396df9b485290ab8"
          },
          "accessToken": {
            "type": "string",
            "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
          },
          "refreshToken": {
            "type": "string",
            "example": "v4wfDN6mRe8olKuTJfPidyvIKRPyQlSIv60WkGGI"
          },
          "accessTokenValidUntil": {

            "type": "string",
            "format": "date-time",
            "example": "Mon, 09 Sep. 09:20:31 GMT"
          },
          "refreshTokenValidUntil": {
            "description": "Expiration date for the refresh token",
            "type": "string",
            "format": "date-time",
            "example": "Mon, 09 Sep. 09:20:31 GMT"
          }
        }
      },
      "user": {
        "type": "object",
        "required": ["_id", "name", "email", "phone", "password"],
        "properties": {
          "_id": {
            "definitions": "User's ID",
            "type": "string",
            "example": "67a676e8396df9b485290ab8"
          },
          "name": {
            "definitions": "full name",
            "type": "string",
            "example": "dddhh aayyz"
          },
          "phone": {
            "definitions": "phone number",
            "type": "string",
            "example": "+1231111"
          },
          "email": {
            "definitions": "User's email",
            "type": "string",
            "example": "111@sa.co"
          },
          "password": {
            "definitions": "User's email",
            "type": "string",
            "example": "qqqQQQ1"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Session expired",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Access token expired"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Route not found"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Route not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
